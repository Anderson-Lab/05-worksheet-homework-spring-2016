{"name":"05 Worksheet Homework Spring 2016","tagline":"DATA 210","body":"\r\n0. Change directories to /home/vagrant/book/ch05/data\r\n1. Count the number of words and lines and characters using the wc command in the file named alice.txt (e.g., wc alice.txt)\r\n2. Using the header command add labels to these columns. Hint: You may want to use awk to format the output from wc before using header\r\n\r\n\r\n\t```bash\r\ncd ~/book/ch05/data\r\nwc alice.txt | awk '{ print $1\"\\t\"$2\"\\t\"$3\"\\t\"$4}'\r\n\t```\r\n\r\n    3735\t29461\t167518\talice.txt\r\n\r\n\r\n4. Now change the order so that the file is the first column\r\n5. Print out the first 10 lines of alice.txt\r\n6. Print out the last 10 lines.\r\n7. Print out lines 5-15 inclusively.\r\n8. Grab all of the chapter numbers and names from alice.txt, but make sure they are printed out so that the names are lined up.\r\n\r\n\r\n\t```bash\r\n# Hint: Remember this command and remember what you can do with awk\r\ngrep -i chapter alice.txt\r\n\t```\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n6. Do the same, but now only do it for chapters that begin with The.\r\n7. Now find all lines that have the word the in them.\r\n8. Now find all the lines that begin with the word The with the T capitalized\r\n9. Now find all the lines that begin with the word the or The\r\n10. How many lines are there that match this last pattern? Hint: Don't forget about the wc command\r\n11. Now randomly sample those lines using the sample command and a 10% probability of keeping each line\r\n12. Print out the chapter headings, but replace the word CHAPTER with CHP\r\n13. Now remove the word chapter all together and print out the headings\r\n14. Now change all the hyphens (\\-) to spaces).\r\n15. Print out the chapters but with everything in lowercase\r\n16. Now all in uppercase\r\n17. Now I want you to write a script called book_info.sh. This should take 1 argument that is the name of the book and print, the number of lines in the entire book. It should look for a print out the number of chapters. It should print out the chapters, but with the actual chapter name justified (aligned).\r\n\r\n### Now we are going to switch gears a little and perform operations on csv files\r\n18. Use csvcut to get the sepal_width and sepal_length columns from Iris-setosa.csv\r\n19. Print those nicely with csvlook\r\n20. Now only print those lines that have a sepal_length greater than 5.0. Hint: use awk\r\n21. Read the names from names.csv and print out the first name and then a space and then the last name\r\n22. Now do the same, but keep the other columns as well\r\n23. Combine the three different types of iris flower files Iris-setosa.csv Iris-versicolor.csv and Iris-virginia.csv into a single file. Make sure you do not repeat the headers. Just stack them vertically.\r\n\r\nDone! We have a lot to do with HTML/XML and JSON, but we'll save that for Thursday!\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}